data <- read.csv('C:\Users\jmcdermo\Documents\GitHub\datasciencecoursera\r_programming\week_one')
data <- read.csv('C:\\Users\\jmcdermo\\Documents\\GitHub\\datasciencecoursera\\r_programming\\week_one')
data <- read.csv('C:\\Users\\jmcdermo\\Documents\\GitHub\\datasciencecoursera\\r_programming\\week_one\\hw1_data.csv')
data
data.names
data
names(data)
data[1:2]
data[,1:2]
data.length
length(data)
nrows(data)
rows(data)
help.search("row")
class(data)
data$Ozone[47]
head(data, 2)
class(head(data,2))
tail(data, 2)
length(data)
length(data.rows)
nrow(data)
ncol(data)
complete.cases(data$Ozone)
nrow(is.na(data$Ozone))
is.na(data$Ozone)
class(is.na(data$Ozone))
data$Ozone((is.na(data$Ozone))
)
data$Ozone((is.na(data$Ozone)))
data$Ozone[(is.na(data$Ozone))]
data$Ozone[!(is.na(data$Ozone))]
nrow(data$Ozone[!(is.na(data$Ozone))])
class(data$Ozone[!(is.na(data$Ozone))])
length(data$Ozone[!(is.na(data$Ozone))])
length(data$Ozone[(is.na(data$Ozone))])
mean(data$Ozone, na.rm=T)
data[data$Ozone > 31 & data$Temp > 90]
data[data$Month > 6]
data[(data$Ozone > 31 & data$Temp > 90)]
data$Ozone > 31
data$Ozone > 31 & data$Temp > 90
data[(data$Ozone > 31 & data$Temp > 90)]
data[(data$Ozone > 31 & data$Temp > 90), ]
data[(data$Ozone > 31 & data$Temp > 90), ]$Solar.R
mean(data[(data$Ozone > 31 & data$Temp > 90), ]$Solar.R)
data[data$Temp > 90, ]
data[data$Temp > 90, ]$Solar.R
mean(data[data$Temp > 90, ]$Solar.R)
mean(data[data$Temp > 90, ]$Solar.R, na.rm=T)
mean(data[data$Temp > 90, ]$Solar.R)
data[data$Month > 6, ]
data[data$Month = 6, ]
data[data$Month == 6, ]
data[data$Month == 6, ]$Temp
mean(data[data$Month == 6, ]$Temp)
max(data[data$Month == 5, ]$Ozone)
data[data$Month == 5
]
data[data$Month == 5, ]
max(data[data$Month == 5, ]$Ozone, na.rm=TRUE)
mean(data[data$Temp > 90, ]$Solar.R, na.rm=TRUE)
high_temp = data[data$Temp > 90, ]
high_temp
high_temp_ozone = high_temp[high_temp$Ozone > 31, ]
high_temp_ozone
mean(high_temp_ozone$Solar.R)
mean(high_temp_ozone$Solar.R, na.rm=TRUE)
install.packages("devtools")
library('devtools')
find_rtools()
a <- available_packages()
a <- available.packages()
a
install.packages("swirl")  # Installs swirl
library(swirl)  # Loads swirl
swirl()  # Runs swirl
library(iris)
library(datasets)
data(iris)
data(mtcars)
tapply(iris, iris[iris$Species == 'virginica'], mean)
tapply(iris, iris[iris$Species == 'virginica', ], mean)
iris$Species == 'virginica'
tapply(iris, iris$Species == 'virginica', mean)
tapply(iris$Sepal.Length, iris$Species == 'virginica', mean)
?gl
gl(3, 10)
tapply(iris, iris$Species, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
split(iris, iris$Species)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
mtcars
?interaction
split(mtcars$mpg, mtcars$cyl)
x <- sapply(split(mtcars$mpg, mtcars$cyl), mean)
x$4
?abs
abs(x[1] - x[3])
source('~/GitHub/datasciencecoursera/r_programming/week_three/cache_vector.R')
cachemean(c(1,2,3,4,5,6))
makeVector(c(1,2,3,4,5,6,10))
beh <- makeVector(c(1,2,3,4,5,6,10))
cachemean(beh)
mean(c(1,2,3,4,5,6,10))
cachemean(beh)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
mat <- matrix(c(4,3,1,9,4,8,10,2,4), ncols=3, nrows=3)
mat <- matrix(c(4,3,1,9,4,8,10,2,4), ncol=3, nrow=3)
mat
solve(mat)
makeCacheMatrix(mat)
cmat <- makeCacheMatrix(mat)
cacheSolve(cmat)
cacheSolve(cmat)
solve
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
cmat <- makeCacheMatrix(mat)
cacheSolve(cmat)
cacheSolve(cmat)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
cmat <- makeCacheMatrix(mat)
cacheSolve(cmat)
cacheSolve(cmat)
source('~/GitHub/ExData_Plotting1/plot1.R')
data <- load_data()
source('~/GitHub/ExData_Plotting1/plot1.R')
data <- load_data()
str(data)
?read.csv
source('~/GitHub/ExData_Plotting1/plot1.R')
data <- load_data()
str(data)
?read
??read
?read.table
source('~/GitHub/ExData_Plotting1/plot1.R')
source('~/GitHub/ExData_Plotting1/plot1.R')
data <- load_data()
str(data)
source('~/GitHub/ExData_Plotting1/plot1.R')
source('~/GitHub/ExData_Plotting1/plot1.R')
data <- load_data()
source('~/GitHub/ExData_Plotting1/plot1.R')
source('~/GitHub/ExData_Plotting1/plot1.R')
data <- load_data()
source('~/GitHub/ExData_Plotting1/plot1.R')
data <- load_data()
source('~/GitHub/ExData_Plotting1/plot1.R')
data <- load_data()
debug('myTime')
?strftime
?hist
hist(dat$Global.Active.Power)
hist(data$Global.Active.Power)
?hist
plot()
source('~/GitHub/ExData_Plotting1/plot1.R')
dat <- load_data()
source('~/GitHub/ExData_Plotting1/plot1.R')
merge_date_time('01/02/2007', '23:01:00')
source('~/GitHub/ExData_Plotting1/plot1.R')
merge_date_time('01/02/2007', '23:01:00')
m <- merge_date_time('01/02/2007', '23:01:00')
str(m)
source('~/GitHub/ExData_Plotting1/plot1.R')
dat <- load_data()
?sapply
source('~/GitHub/ExData_Plotting1/plot1.R')
source('~/GitHub/ExData_Plotting1/plot1.R')
dat <- load_data()
sapply(merge_date_time, dat$Date, dat$Time)
mapply(merge_date_time, dat$Date, dat$Time)
?mapp
?mapply
apply(merge_date_time, dat)
source('~/GitHub/ExData_Plotting1/plot1.R')
apply(merge_date_time, dat)
?apply
apply(merge_date_time, 1, dat)
apply(dat, 1, merge_date_time)
source('~/GitHub/ExData_Plotting1/plot1.R')
apply(dat, 1, merge_date_time)
apply(dat, 1, merge_date_time)
source('~/GitHub/ExData_Plotting1/plot1.R')
apply(dat, 1, merge_date_time)
source('~/GitHub/ExData_Plotting1/plot1.R')
load_data()
source('~/GitHub/ExData_Plotting1/plot1.R')
dat<-load_data()
source('~/GitHub/ExData_Plotting1/plot1.R')
dat<-load_data()
source('~/GitHub/ExData_Plotting1/plot1.R')
dat<-load_data()
source('~/GitHub/ExData_Plotting1/plot1.R')
dat<-load_data()
dat$datetime = paste(dat$Date, dat$Time)
dat$datetime = strptime(paste(dat$Date, dat$Time), format="%d/%m/%Y %H:%M:%S")
source('~/GitHub/ExData_Plotting1/plot1.R')
source('~/GitHub/ExData_Plotting1/plot1.R')
plot()
source('~/GitHub/ExData_Plotting1/plot1.R')
plot()
?hist
source('~/GitHub/ExData_Plotting1/plot1.R')
source('~/GitHub/ExData_Plotting1/plot1.R')
plot9)
plot()
source('~/GitHub/ExData_Plotting1/plot1.R')
plot()
plot(dat$datetime, dat$Global.Active.Power)
?plot
source('~/GitHub/ExData_Plotting1/plot2.R')
dat <- load_data()
plot(dat$datetime, dat$Global.Active.Power)
with(dat, plot(datetime, Global.Active.Power))
with(dat, plot(datetime, Global.Active.Power, type='l'))
plot(1:4, 3:4)
plot(1:4, 3:4)
with(dat, plot(x=datetime, y=Global.Active.Power, type='l'))
x <- 1:4
y <- 5:8
plot(x,y)
?plot
plot(x)
plot()
plot(1:5)
plot(dat$datetime)
plot(dat$datetime, dat$Global.Active.Power)
plot(1,2)
source('~/GitHub/ExData_Plotting1/plot2.R')
dat <- load_data()
source('~/GitHub/ExData_Plotting1/plot2.R')
dat <- load_data()
plot(dat$datetime, dat$Global.Active.Power)
plot(dat$datetime, dat$Global.Active.Power, type='l')
plot(dat$datetime, dat$Global.Active.Power, type='l', xlab='', ylab='Global Active Power (kilowatts')
type='l',
source('~/GitHub/ExData_Plotting1/plot2.R')
type='l',
plot_result()
source('~/GitHub/ExData_Plotting1/plot3.R')
plot(dat$datetime)
plot(dat$datetime, dat$Sub.metering.1)
?lines
source('~/GitHub/ExData_Plotting1/plot3.R')
source('~/GitHub/ExData_Plotting1/plot3.R')
?legend
legend()
source('~/GitHub/ExData_Plotting1/plot3.R')
?legend
source('~/GitHub/ExData_Plotting1/plot3.R')
source('~/GitHub/ExData_Plotting1/plot3.R')
source('~/GitHub/ExData_Plotting1/plot3.R')
source('~/GitHub/ExData_Plotting1/plot3.R')
par(mrows=c(2,2))
par(mfrow=c(2,2))
source('~/GitHub/ExData_Plotting1/plot1.R')
source('~/GitHub/ExData_Plotting1/plot2.R')
source('~/GitHub/ExData_Plotting1/plot3.R')
source('~/GitHub/ExData_Plotting1/plot4.R')
source('~/GitHub/ExData_Plotting1/plot4.R')
source('~/GitHub/ExData_Plotting1/plot4.R')
source('~/GitHub/ExData_Plotting1/plot4.R')
install.packages('RMySql')
install.packages('RMySQL')
source('http://bioconductor.org/biocLite.R')
biocLite('rhdf5')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_two/hdf5.R')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_two/hdf5.R')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_two/hdf5.R')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_two/hdf5.R')
install.packages('sqldf')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_two/sql.R')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_two/sql.R')
str(acs)
sqldf("select * from acs where AGEP < 50")
sqldf("select pwgtp1 from acs where AGEP < 50")
unique(acs$AGEP)
sqldf("select distinct AGEP from acs")
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_two/html.R')
install.packages('url')
install.packages('httr')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_two/html.R')
cont
install.packages("url")
?content
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_two/html.R')
lines
?nchar
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_two/html.R')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_two/html.R')
nchar(lines[10])
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_two/html.R')
?read.wf
?read.fwf
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_two/fixed_width.R')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_two/fixed_width.R')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_two/fixed_width.R')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_two/fixed_width.R')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_two/fixed_width.R')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_two/fixed_width.R')
dat
head(dat)
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_two/fixed_width.R')
head(dat)
sum(dat[4])
sum(dat[5])
source('~/.active-rstudio-document')
source('~/GitHub/datasciencecoursera/exploratory_data_analysis/week_two/week_two.R')
library(nlme)
weight
Time
library(lattice)
