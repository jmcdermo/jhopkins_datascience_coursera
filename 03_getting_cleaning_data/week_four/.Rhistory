data <- read.csv('C:\Users\jmcdermo\Documents\GitHub\datasciencecoursera\r_programming\week_one')
data <- read.csv('C:\\Users\\jmcdermo\\Documents\\GitHub\\datasciencecoursera\\r_programming\\week_one')
data <- read.csv('C:\\Users\\jmcdermo\\Documents\\GitHub\\datasciencecoursera\\r_programming\\week_one\\hw1_data.csv')
data
data.names
data
names(data)
data[1:2]
data[,1:2]
data.length
length(data)
nrows(data)
rows(data)
help.search("row")
class(data)
data$Ozone[47]
head(data, 2)
class(head(data,2))
tail(data, 2)
length(data)
length(data.rows)
nrow(data)
ncol(data)
complete.cases(data$Ozone)
nrow(is.na(data$Ozone))
is.na(data$Ozone)
class(is.na(data$Ozone))
data$Ozone((is.na(data$Ozone))
)
data$Ozone((is.na(data$Ozone)))
data$Ozone[(is.na(data$Ozone))]
data$Ozone[!(is.na(data$Ozone))]
nrow(data$Ozone[!(is.na(data$Ozone))])
class(data$Ozone[!(is.na(data$Ozone))])
length(data$Ozone[!(is.na(data$Ozone))])
length(data$Ozone[(is.na(data$Ozone))])
mean(data$Ozone, na.rm=T)
data[data$Ozone > 31 & data$Temp > 90]
data[data$Month > 6]
data[(data$Ozone > 31 & data$Temp > 90)]
data$Ozone > 31
data$Ozone > 31 & data$Temp > 90
data[(data$Ozone > 31 & data$Temp > 90)]
data[(data$Ozone > 31 & data$Temp > 90), ]
data[(data$Ozone > 31 & data$Temp > 90), ]$Solar.R
mean(data[(data$Ozone > 31 & data$Temp > 90), ]$Solar.R)
data[data$Temp > 90, ]
data[data$Temp > 90, ]$Solar.R
mean(data[data$Temp > 90, ]$Solar.R)
mean(data[data$Temp > 90, ]$Solar.R, na.rm=T)
mean(data[data$Temp > 90, ]$Solar.R)
data[data$Month > 6, ]
data[data$Month = 6, ]
data[data$Month == 6, ]
data[data$Month == 6, ]$Temp
mean(data[data$Month == 6, ]$Temp)
max(data[data$Month == 5, ]$Ozone)
data[data$Month == 5
]
data[data$Month == 5, ]
max(data[data$Month == 5, ]$Ozone, na.rm=TRUE)
mean(data[data$Temp > 90, ]$Solar.R, na.rm=TRUE)
high_temp = data[data$Temp > 90, ]
high_temp
high_temp_ozone = high_temp[high_temp$Ozone > 31, ]
high_temp_ozone
mean(high_temp_ozone$Solar.R)
mean(high_temp_ozone$Solar.R, na.rm=TRUE)
install.packages("devtools")
library('devtools')
find_rtools()
a <- available_packages()
a <- available.packages()
a
install.packages("swirl")  # Installs swirl
library(swirl)  # Loads swirl
swirl()  # Runs swirl
library(iris)
library(datasets)
data(iris)
data(mtcars)
tapply(iris, iris[iris$Species == 'virginica'], mean)
tapply(iris, iris[iris$Species == 'virginica', ], mean)
iris$Species == 'virginica'
tapply(iris, iris$Species == 'virginica', mean)
tapply(iris$Sepal.Length, iris$Species == 'virginica', mean)
?gl
gl(3, 10)
tapply(iris, iris$Species, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
split(iris, iris$Species)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
mtcars
?interaction
split(mtcars$mpg, mtcars$cyl)
x <- sapply(split(mtcars$mpg, mtcars$cyl), mean)
x$4
?abs
abs(x[1] - x[3])
source('~/GitHub/datasciencecoursera/r_programming/week_three/cache_vector.R')
cachemean(c(1,2,3,4,5,6))
makeVector(c(1,2,3,4,5,6,10))
beh <- makeVector(c(1,2,3,4,5,6,10))
cachemean(beh)
mean(c(1,2,3,4,5,6,10))
cachemean(beh)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
mat <- matrix(c(4,3,1,9,4,8,10,2,4), ncols=3, nrows=3)
mat <- matrix(c(4,3,1,9,4,8,10,2,4), ncol=3, nrow=3)
mat
solve(mat)
makeCacheMatrix(mat)
cmat <- makeCacheMatrix(mat)
cacheSolve(cmat)
cacheSolve(cmat)
solve
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
cmat <- makeCacheMatrix(mat)
cacheSolve(cmat)
cacheSolve(cmat)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
cmat <- makeCacheMatrix(mat)
cacheSolve(cmat)
cacheSolve(cmat)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
meh <- xyplot(weight ~ Time | Diet, BodyWeight)
class(meh)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
str(p)
class(p)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
xyplot(Ozone ~ Wind | factor(Month), data = airquality)
?splom
?par
?print.trellis
?trellis.par.set
?text
?lines
?axis
?lpoints
library(datasets)
data(airquality)
install.packages("ggplot2")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
?axis
?panel.abline
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
source('~/indiependence 2014/indiependence2014.R')
source('~/indiependence 2014/indiependence2014.R')
source('~/indiependence 2014/indiependence2014.R')
debugSource('~/indiependence 2014/indiependence2014.R')
data[i]
debugSource('~/indiependence 2014/indiependence2014.R')
debugSource('~/indiependence 2014/indiependence2014.R')
list(info[10])
players <- list()
rm(beh)
rm(cmat)
rm(mat)
source('~/indiependence 2014/indiependence2014.R')
source('~/indiependence 2014/indiependence2014.R')
source('~/indiependence 2014/indiependence2014.R')
source('~/indiependence 2014/indiependence2014.R')
source('~/indiependence 2014/indiependence2014.R')
source('~/indiependence 2014/indiependence2014.R')
source('~/indiependence 2014/indiependence2014.R')
source('~/indiependence 2014/indiependence2014.R')
source('~/indiependence 2014/indiependence2014.R')
source('~/indiependence 2014/indiependence2014.R')
unlist(players)
source('~/indiependence 2014/indiependence2014.R')
players
?barplot
source('~/indiependence 2014/indiependence2014.R')
source('~/indiependence 2014/indiependence2014.R')
source('~/indiependence 2014/indiependence2014.R')
source('~/indiependence 2014/indiependence2014.R')
source('~/indiependence 2014/indiependence2014.R')
source('~/indiependence 2014/indiependence2014.R')
source('~/indiependence 2014/indiependence2014.R')
source('~/indiependence 2014/indiependence2014.R')
install.packages(quantmod)
install.packages("quantmod")
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_four/q_one.R')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_four/q_one.R')
?strsplit
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_four/q_one.R')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_four/q_one.R')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_four/q_one.R')
split[123]
?read.csv
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_four/q_one.R')
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
amzn[1]
amzn[2]
amzn[3]
rownames(amzn)
index(amzn)
as.Date(index(amzn))
amzn$day <- weekdays(index(amzn))
amzn[1]
amzn[2]
weekdays(index(amzn))
merge(amzn, weekdays(index(amzn)))
source('~/indiependence 2014/indiependence2014.R')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_four/q_one.R')
mean(gdp$CountryCode, na.rm=TRUE)
gdp$CountryCode
mean(gdp$Economy, na.rm=TRUE)
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_four/q_one.R')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_four/q_one.R')
grep('^United', gdp$LongName)
grep('Fiscal year end:.*June.*', edu_gdp$Special.Notes)
count(grep('Fiscal year end:.*June.*', edu_gdp$Special.Notes))
length(grep('Fiscal year end:.*June.*', edu_gdp$Special.Notes))
amzn[1]
?merge.xts
amzn$weekday <- weekdays(as.Date(amzn$date))
amzn$weekday <- weekdays(index(amzn))
amzn[1]
weekdays(index(amzn))
xts
?xts
meh <- xts(weekdays(index(amzn)))
meh <- xts(weekdays(index(amzn)), order.by=index(amzn))
meh[1]
meh[2]
merge.xts(amzn, meh)
amzn["2012-01-01/2012-12-31"]
length(amzn["2012-01-01/2012-12-31"])
nrow(amzn["2012-01-01/2012-12-31"])
weekday_2012 <- weekdays(index(amzn_2012))
amzn_2012 <- amzn["2012-01-01/2012-12-31"]
weekday_2012 <- weekdays(index(amzn_2012))
grep('Monday', weekday_2012)
length(grep('Monday', weekday_2012))
