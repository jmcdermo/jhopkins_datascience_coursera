install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
install.packages("C:/Users/jmcdermo/AppData/Local/Temp/RtmpgVYQUU/downloaded_packages/RMySQL_0.9-3.tar.gz", repos = NULL, type = "source")
install.packages('RMySQL',type='source')
library("RODBC", lib.loc="C:/Program Files/R/R-3.0.2/library")
1 + 1
install.packages(c("boot", "class", "cluster", "foreign", "KernSmooth", "lattice", "MASS", "Matrix", "mgcv", "nlme", "nnet", "RODBC", "rpart", "spatial", "survival"))
install.package('xlsx')
install.packages('xlsx')
source('~/.active-rstudio-document')
source('~/test.R')
source('~/test.R')
source('~/test.R')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_three/q_one.R')
data[data$AGS > 10000 && data$ACR == 3]
data[data$AGS > 10000 & data$ACR == 3]
data[data$AGS == 6 && data$ACR == 3]
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_three/q_one.R')
data[data$AGS == 6]
View(data)
data[data$AGS == 6]
data[data$AGS == 6 & data$ACR == 3]
with(data, AGS==6)
with(data, AGS==6 & ACR==3)
which(with(data, AGS==6 & ACR==3))
install.packages('jpeg')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_three/q_two.R')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_three/q_two.R')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_three/q_two.R')
?quantile
?readJPEG
?quantile
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_three/q_two.R')
source('~/.active-rstudio-document')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_three/q_two.R')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_three/q_three.R')
rm(agricultureLogical)
rm(quants)
rm(data)
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_three/q_three.R')
library(plyr)
?join
str(gdp)
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_three/q_three.R')
unique(data$EconomyName)
unique(gdp$EconomyName)
source('~/.active-rstudio-document')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_three/q_three.R')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_three/q_three.R')
join(edu, gdp, by = 'CountryCode', type='full')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_three/q_three.R')
?arrange
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_three/q_three.R')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_three/q_three.R')
rm(activities)
order(edU_gdp$GDP, decreasing=TRUE)
str(edu_gdp)
with(edu_gdp, order(GDP, decreasing=TRUE))
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_three/q_three.R')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_three/q_three.R')
edu_gdp
edu_gdp[3]
edu_gdp[3,]
edu_gdp[13,]
with(edu_gdp, sort(decreasing=TRUE))
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_three/q_three.R')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_three/q_three.R')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_three/q_three.R')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_three/q_three.R')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_three/q_three.R')
source('~/.active-rstudio-document')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_three/q_three.R')
edu_gdp[ordered]
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_three/q_three.R')
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_three/q_three.R')
gdp <- read.csv('getdata-data-GDP.csv')
unique(gdp$X.3)
gdp <- read.csv('getdata-data-GDP.csv')
gdp <- gdp[X != '']
gdp <- gdp[gdp$X != '']
gdp <- read.csv('getdata-data-GDP.csv')
gdp <- subset(gdp, c('X, X.3', 'Gross.domestic.product.2012'))
colnames(gdp) <- c('CountryCode', 'Ranking', 'GDP')
gdp <- gdp[c('X, X.3', 'Gross.domestic.product.2012')]
gdp <- read.csv('getdata-data-GDP.csv')
gdp <- gdp[c(1, 2, 5)]
colnames(gdp) <- c('CountryCode', 'GDP', 'Ranking')
unique(gdp$Ranking)
unique(gdp$GDP)
gdp <- read.csv('getdata-data-GDP.csv')
gdp <- gdp[c(1, 2, 5)]
colnames(gdp) <- c('CountryCode', 'Ranking', 'GDP')
gdp <- read.csv('getdata-data-GDP.csv', skip=5, nrows=231)
gdp <- gdp[c(1, 2, 5)]
colnames(gdp) <- c('CountryCode', 'Ranking', 'GDP')
edu <- read.csv('getdata-data-EDSTATS_Country.csv')
edu_gdp <- merge(edu, gdp, by = 'CountryCode', all=TRUE)
gdp <- read.csv('getdata-data-GDP.csv', skip=5, nrows=231)
gdp <- gdp[c(1, 2, 5)]
colnames(gdp) <- c('CountryCode', 'Ranking', 'Economy')
gdp$Economy <- as.numeric(gsub(',','', gdp$Economy))
unique(gdp$Economy)
edu <- read.csv('getdata-data-EDSTATS_Country.csv')
edu_gdp <- merge(edu, gdp, by = 'CountryCode', all=TRUE)
ordered <- with(edu_gdp, order(GDP, decreasing=TRUE))
edU_gdp[ordered,]
edu_gdp <- merge(edu, gdp, by = 'CountryCode', all=TRUE)
ordered <- with(edu_gdp, order(Economy, decreasing=TRUE))
edU_gdp[ordered,]
rm(sorted)
View(gdp)
source('~/GitHub/datasciencecoursera/getting_cleaning_data/week_three/q_three.R')
unique(gdp$CountryCode)
gdp$CountryCode != ''
gdp[gdp$CountryCode != '',]
gdp$Economy <- as.numeric(gsub(',','', gdp$Economy))
gdp
# load in the educational data
edu <- read.csv('getdata-data-EDSTATS_Country.csv')
# merge with gdp
edu_gdp <- merge(edu, gdp, by = 'CountryCode', all=TRUE)
ordered <- with(edu_gdp, order(Economy, decreasing=TRUE))
edu_gdp
edu_gdp[ordered]
edu_gdp[ordered,]
edU_gdp[ordered,][13]
edU_gdp[ordered,]
edu_gdp[ordered,]
(edu_gdp[ordered,])[13]
(edu_gdp[ordered,])[13,]
ordered <- with(edu_gdp, order(Ranking, decreasing=TRUE))
edU_gdp[ordered,][13]
ordered <- with(edu_gdp, order(Ranking, decreasing=TRUE))
(edU_gdp[ordered,])[13]
ordered <- with(edu_gdp, order(Ranking, decreasing=TRUE))
edU_gdp[ordered,]
edU_gdp[ordered]
View(gdp)
edU_gdp[ordered,]
edU_gdp
str(edU_gdp)
edu_gdp[ordered,][13]
edu_gdp[ordered,][13,]
edu_gdp[ordered, c('CountryCode', 'Ranking', 'Economy', 'Long.Name')][13,]
num_matches <- sum(!is.na(unique(edu_gdp$rankingGDP)))
num_matches <- sum(!is.na(unique(edu_gdp$Economy)))
unique(edu_gdp$CountryCode)
gdp <- gdp[gdp$CountryCode != '',]
edu <- read.csv('getdata-data-EDSTATS_Country.csv')
# merge with gdp
edu_gdp <- merge(edu, gdp, by = 'CountryCode', all=TRUE)
num_matches <- sum(!is.na(unique(edu_gdp$Economy)))
unique(edu_gdp$CountryCode)
edu_gdp[, mean(Ranking, na.rm = TRUE), by = Income.Group]
with(edu_gdp, mean(Ranking, na.rm = TRUE), by = Income.Group)
with(edu_gdp, mean(Ranking, na.rm = TRUE, by = Income.Group))
?mean
aggregate(edu_gdp$Ranking, by=list(edu_gdp$Income.Group), FUN=mean)
?aggregate
aggregate(edu_gdp$Ranking, by=list(edu_gdp$Income.Group), FUN=mean, na.rm=TRUE)
